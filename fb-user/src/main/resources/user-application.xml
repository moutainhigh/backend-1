<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    <context:annotation-config />
    <context:component-scan base-package="com.fb.user" />
    <!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:user-jdbc.properties,user-redis.properties" ignore-unresolvable="true"/>

    <cache:annotation-driven cache-manager="userRedisCacheManager"/>
    <bean id="userRedis" class="com.fb.common.util.RedisUtils">
        <constructor-arg index="0" ref="userRedisTemplate"/>
        <constructor-arg index="1" ref="userRedisTemplate"/>
    </bean>

    <bean id="userJedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg>
            <bean class="org.springframework.data.redis.connection.RedisStandaloneConfiguration"
                  c:host-name="${redis.hostname}" c:port="${redis.port}" />
        </constructor-arg>
    </bean>

    <bean id="userRedisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
          factory-method="create" c:connection-factory-ref="userJedisConnectionFactory" />

    <bean id="userStringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="userJacksonValueSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer">
        <constructor-arg ref="objectMapper"/>
    </bean>

    <bean id="objectMapper" class="com.fb.common.util.RedisValueObjectMapper">
    </bean>

    <bean id="userRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="userJedisConnectionFactory" />
        <property name="keySerializer" ref="userStringRedisSerializer" />
        <property name="valueSerializer" ref="userJacksonValueSerializer"/>
        <property name="hashKeySerializer" ref="userStringRedisSerializer" />
    </bean>

    <bean id="userDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${datasource.url}"/>
        <property name="username" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}"/>
        <property name="minIdle" value="${datasource.minIdle}"/>
        <property name="maxActive" value="${datasource.maxActive}"/>
        <property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}"/>
        <property name="queryTimeout" value="${datasource.queryTimeout}"/>
        <property name="validationQuery" value="${datasource.validationQuery}"/>
        <property name="testOnBorrow" value="${datasource.testOnBorrow}"/>
        <property name="testWhileIdle" value="${datasource.testWhileIdle}"/>
    </bean>

    <bean id="userSqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="userDataSource"/>
        <property name="mapperLocations" value="classpath:/mapper/*.xml"/>
    </bean>
    <bean id="userMapperConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fb.user.dao"/>
        <property name="sqlSessionFactoryBeanName" value="userSqlSessionFactory"/>
    </bean>
</beans>
